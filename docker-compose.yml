version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: reservalab-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: reservalab
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '5432:5432'
    networks:
      - reservalab-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d reservalab']
      interval: 10s
      timeout: 5s
      retries: 5

  # Aplicação NestJS
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: reservalab-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 4000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/reservalab?schema=public
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
    ports:
      - '4000:4000'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - reservalab-network
    volumes:
      - ./uploads:/app/uploads # Para uploads de arquivos, se necessário

  # PgAdmin (opcional - para administração do banco)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: reservalab-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@reservalab.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
    ports:
      - '8080:80'
    depends_on:
      - postgres
    networks:
      - reservalab-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  pgadmin_data:

networks:
  reservalab-network:
    driver: bridge
